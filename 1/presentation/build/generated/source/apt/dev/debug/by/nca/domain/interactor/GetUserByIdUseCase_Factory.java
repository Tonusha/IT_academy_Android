// Generated by Dagger (https://google.github.io/dagger).
package by.nca.domain.interactor;

import by.nca.domain.executor.PostExecutionThread;
import by.nca.domain.repository.UserRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class GetUserByIdUseCase_Factory implements Factory<GetUserByIdUseCase> {
  private final Provider<PostExecutionThread> arg0Provider;

  private final Provider<UserRepository> arg1Provider;

  public GetUserByIdUseCase_Factory(
      Provider<PostExecutionThread> arg0Provider, Provider<UserRepository> arg1Provider) {
    this.arg0Provider = arg0Provider;
    this.arg1Provider = arg1Provider;
  }

  @Override
  public GetUserByIdUseCase get() {
    return new GetUserByIdUseCase(arg0Provider.get(), arg1Provider.get());
  }

  public static GetUserByIdUseCase_Factory create(
      Provider<PostExecutionThread> arg0Provider, Provider<UserRepository> arg1Provider) {
    return new GetUserByIdUseCase_Factory(arg0Provider, arg1Provider);
  }
}
